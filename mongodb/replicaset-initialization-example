To initialize a MongoDB replica set with the specific member configurations you've described, follow these steps. Ensure that MongoDB is running on port 27017 and using the correct bindIP (using the hostname) on each server.

1. **Connect to One of the Servers**: Use the MongoDB shell to connect to one of the MongoDB servers. You will use this shell to initiate and configure the replica set.

2. **Initiate Replica Set Configuration**: Run the following command in the MongoDB shell to initiate the replica set configuration. Replace `'hostname1'`, `'hostname2'`, `'hostname3'`, and `'hostname4'` with the actual hostnames of your servers.

   ```javascript
   rs.initiate({
     _id: "myReplicaSet",
     members: [
       { _id: 0, host: "hostname1:27017", priority: 2, votes: 1 },
       { _id: 1, host: "hostname2:27017", priority: 1.5, votes: 1 },
       { _id: 2, host: "hostname3:27017", priority: 1, votes: 1 },
       { _id: 3, host: "hostname4:27017", arbiterOnly: true, priority: 0, votes: 0 }
     ]
   })
   ```

   This command initiates a replica set named "myReplicaSet" with the specified members. Server one is configured as the primary with priority 2 and one vote, server two as a secondary with priority 1.5 and one vote, server three as another secondary with priority 1 and one vote, and server four as an arbiter with priority 0 and no voting rights.

3. **Check Replica Set Configuration**: After initiating the replica set, you can check the configuration to ensure that it matches your specifications. Run the following command in the MongoDB shell:

   ```javascript
   rs.conf()
   ```

   This command will display the current replica set configuration, including the members and their settings.

4. **Check Replica Set Status**: You can also check the status of the replica set to ensure that it is functioning correctly. Run the following command in the MongoDB shell:

   ```javascript
   rs.status()
   ```

   This command will display information about the replica set's status, including the primary and secondary members.

Remember to replace `'hostname1'`, `'hostname2'`, `'hostname3'`, and `'hostname4'` with the actual hostnames of your servers in the commands.

Please note that setting up and managing a MongoDB replica set involves more considerations than covered here, such as security, network configuration, and failover handling. It's important to refer to the MongoDB documentation for detailed and up-to-date instructions for your specific use case.
