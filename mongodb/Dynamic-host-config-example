Ansible playbook that installs MongoDB on Red Hat Enterprise Linux 8.6, retrieves the hostnames of all four servers, and configures a replica set with specific hostnames and priorities:

```yaml
---
- name: Install and configure MongoDB replica set
  hosts: your_servers
  become: true
  vars:
    mongo_replica_set_name: myreplicaset
    mongo_version: 4.4
    primary_hostname: ""
    secondary1_hostname: ""
    secondary2_hostname: ""
    arbiter_hostname: ""

  tasks:
    - name: Install MongoDB packages
      yum:
        name: mongodb-org
        state: present
        enablerepo: mongodb-org-{{ mongo_version }}
      notify: Start MongoDB

    - name: Gather server hostnames
      command: hostname
      register: hostname_output

    - name: Set server hostnames
      set_fact:
        primary_hostname: "{{ hostname_output.stdout }}001"
        secondary1_hostname: "{{ hostname_output.stdout }}002"
        secondary2_hostname: "{{ hostname_output.stdout }}003"
        arbiter_hostname: "{{ hostname_output.stdout }}004"

    - name: Configure MongoDB replica set
      blockinfile:
        path: /etc/mongod.conf
        block: |
          replication:
            replSetName: {{ mongo_replica_set_name }}
      notify: Restart MongoDB

    - name: Restart MongoDB
      systemd:
        name: mongod
        state: restarted

    - name: Wait for MongoDB to start
      wait_for:
        port: 27017
        timeout: 300

    - name: Initialize MongoDB replica set
      shell: mongo --eval "rs.initiate()"
      when: inventory_hostname == primary_hostname
      register: rs_init_output
      until: rs_init_output.stdout_lines[-1] is search("ok: [127.0.0.1]")

    - name: Add MongoDB replica set members
      shell: mongo --eval "rs.add('{{ item }}:27017', { priority: {{ item.priority }}, votes: 1 })"
      with_items:
        - { hostname: secondary1_hostname, priority: 1.5 }
        - { hostname: secondary2_hostname, priority: 1 }
      when: inventory_hostname != primary_hostname

    - name: Add MongoDB arbiter
      shell: mongo --eval "rs.addArb('{{ item }}:27017', { priority: 0, votes: 0 })"
      with_items:
        - arbiter_hostname
      when: inventory_hostname != primary_hostname

  handlers:
    - name: Start MongoDB
      systemd:
        name: mongod
        state: started
        enabled: yes
```

Replace `your_servers` with the appropriate host or group of hosts in your inventory file.

To execute this playbook, save it to a file (e.g., `mongodb_setup.yml`) and run the following command:

```bash
ansible-playbook -i inventory_file mongodb_setup.yml
```

This playbook will install MongoDB, retrieve the hostnames of all four servers, configure the replica set using the obtained hostnames, and start the MongoDB service. The server with the hostname ending in "001" will be set as the primary member with a priority of 2. The server with the hostname ending in "002" will be a secondary member with a priority of 1.5. The server with the hostname ending in "003" will be another secondary member with a priority of 1. Finally, the server with the hostname ending in "004" will serve as the arbiter member with a priority of 0.

Please note that you may need to customize the
