Here's a **detailed step-by-step guide** to troubleshoot the issue when you **require client certificates in IIS** but can’t access the site using Chrome:

### 1. **Verify the Client Certificate Installation**
Make sure that the **client certificate** is properly installed on your client machine and available for Chrome to use:

#### Steps:
- **Open Certificate Manager** (`certmgr.msc`) on the client machine.
- Navigate to **Personal > Certificates**.
- Ensure that your **client certificate** is listed under **Personal > Certificates**.
  - If the client certificate is missing, you need to install it by importing it into the **Personal** store of the current user.
  
  **To import the certificate**:
  1. Right-click on **Personal > Certificates**.
  2. Choose **All Tasks > Import**.
  3. Follow the wizard to import the `.pfx` file (ensure you include the private key if necessary).

### 2. **Check the Root CA Certificate**
The **root certificate authority (CA)** that issued your client certificate must be trusted by the client machine.

#### Steps:
1. Open **Certificate Manager** (`certmgr.msc`).
2. Navigate to **Trusted Root Certification Authorities > Certificates**.
3. Ensure that the **root certificate** of the CA that issued the client certificate is present.

   If it's missing, you need to install the root CA certificate:
   - Import the **CA certificate** under **Trusted Root Certification Authorities**.

### 3. **Verify Client Certificate Presentation in Chrome**
Make sure Chrome is correctly configured to present the client certificate to the server:

#### Steps:
1. Type `chrome://settings/privacy` in the address bar.
2. Scroll down to **Security** and click **Manage Certificates**.
3. Under the **Your Certificates** tab, check if the client certificate is listed. If not:
   - Click on **Import** and select your certificate.

### 4. **Check SSL Settings in IIS**
Ensure that the SSL settings in IIS are configured correctly to accept client certificates:

#### Steps:
1. **Open IIS Manager**.
2. Select your website, and in the **Features View**, double-click **SSL Settings**.
3. Ensure the following settings:
   - **Require SSL**: Checked.
   - **Client certificates**: Set to **Require** (if client certificates are mandatory).
   
4. Ensure that **authentication settings** are correct:
   - Navigate to **Authentication** (in the **Features View** of the website).
   - Ensure that **Anonymous Authentication** is disabled.
   - Enable **Windows Authentication** or another appropriate method if applicable.

### 5. **Check for Certificate Mapping in IIS**
If you're using **client certificate mapping** (one-to-one or many-to-one mapping), ensure it is set up properly.

#### Steps:
1. In IIS Manager, select the server or website.
2. In the **Features View**, double-click **SSL Settings**.
3. Under **SSL Certificate Mapping Authentication**, verify that:
   - Client certificate mapping is configured correctly.
   - Ensure proper certificate-to-user mappings are in place.

### 6. **Check Windows Firewall or Security Software**
Ensure that no **firewall** or **security software** is blocking the communication.

- Temporarily disable any security software or firewall to test.
- Ensure port **443** is open for HTTPS connections.

### 7. **Check Event Viewer for SSL and Schannel Errors**
Event Viewer can provide useful insights into why the SSL handshake might be failing.

#### Steps:
1. Open **Event Viewer** (`eventvwr.msc`).
2. Navigate to **Windows Logs** > **System**.
3. Look for **Schannel** errors. These are related to SSL/TLS handshake failures and can point to issues with certificates or protocol mismatch.
4. Also, check **IIS logs** for HTTP 403.x errors (403.7 specifically relates to client certificates).

### 8. **Check Chrome Debugging Tools**
You can use Chrome's developer tools to troubleshoot certificate-related issues.

#### Steps:
1. Open **Developer Tools** in Chrome (**F12** or right-click > **Inspect**).
2. Go to the **Security** tab.
3. Make a request to your site.
4. Check the **Connection** section for details about the SSL/TLS connection, including which client certificate (if any) was presented, and the TLS version used.

### 9. **Check for HTTP/2 Issues**
Sometimes **HTTP/2** can cause problems with client certificates. Disabling HTTP/2 may resolve the issue.

#### Disable HTTP/2 in IIS:
1. Open **IIS Manager**.
2. Select your website.
3. Open the **Command Prompt** as an administrator.
4. Run the following command to disable HTTP/2:
   ```bash
   netsh http add iplisten ipaddress=0.0.0.0
   ```
   
Alternatively, you can try **disabling HTTP/2 in Chrome** by launching it with the following flag:
```bash
chrome.exe --disable-http2
```

### 10. **Verify Client Certificate Chain and Key Usage**
The client certificate must have the proper **Extended Key Usage (EKU)** and be part of a valid certificate chain.

#### Steps:
1. In **certmgr.msc**, double-click your client certificate.
2. Navigate to the **Details** tab.
3. Look for the **Extended Key Usage** field.
   - Ensure it includes `Client Authentication`.
   
4. Also, verify the certificate chain in the **Certification Path** tab.
   - Ensure there are no errors in the chain and the root certificate is trusted.

### 11. **Clear SSL State in the Client Machine**
Sometimes cached SSL certificates can cause issues, especially after changes to certificates or settings.

#### Steps:
1. Open **Internet Options** on the client machine.
2. Go to the **Content** tab.
3. Click **Clear SSL State**.

### 12. **Test on Other Browsers**
- Test the site using **Firefox** or **Edge** to see if the issue persists across browsers.
- If it works in other browsers but not in Chrome, the issue could be with Chrome’s handling of certificates.

### 13. **Use External Tools to Verify SSL/TLS Configuration**
Use external tools like [SSL Labs](https://www.ssllabs.com/ssltest/) to test the SSL/TLS configuration of your IIS site, including client certificate requirements.

- This tool will give you a comprehensive report of your site’s SSL/TLS configuration and any issues with client certificates.

---

### Summary of Key Troubleshooting Points:
- Ensure **client certificate** is correctly installed on the client machine.
- Verify **root CA** is trusted in the client’s **Trusted Root Certification Authorities**.
- Double-check **SSL Settings** and **Authentication Settings** in IIS.
- Use **Developer Tools** in Chrome to troubleshoot connection and certificate issues.
- Check for **Schannel errors** in **Event Viewer** for SSL/TLS handshake issues.
- Disable **HTTP/2** temporarily if you suspect a conflict.
- **Clear SSL cache** and **import the certificate manually** if necessary.

Would you like more help with any specific step, or did one of these work for you?
