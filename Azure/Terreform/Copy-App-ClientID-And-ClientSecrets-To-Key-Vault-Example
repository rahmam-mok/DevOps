Certainly! Below is an example Terraform script to copy an Azure AD application's client ID and client secret to an existing Azure Key Vault using data blocks:

```hcl
provider "azurerm" {
  features = {}
}

data "azurerm_client_config" "current" {}

data "azurerm_application" "existing" {
  name = "your-existing-application-name"
}

data "azurerm_application_password" "existing" {
  application_id = data.azurerm_application.existing.application_id
}

data "azurerm_key_vault" "existing" {
  name                = "your-existing-key-vault"
  resource_group_name = "your-existing-resource-group"
}

resource "azurerm_key_vault_secret" "client_id" {
  name         = "app-client-id"
  value        = data.azurerm_application.existing.application_id
  key_vault_id = data.azurerm_key_vault.existing.id
}

resource "azurerm_key_vault_secret" "client_secret" {
  name         = "app-client-secret"
  value        = data.azurerm_application_password.existing.value
  key_vault_id = data.azurerm_key_vault.existing.id
}
```

In this script:

- The `azurerm_application` data block fetches information about the existing Azure AD application.
- The `azurerm_application_password` data block retrieves the client secret associated with the application.
- The `azurerm_key_vault` data block fetches information about the existing Azure Key Vault.
- Two `azurerm_key_vault_secret` resources are then created to store the client ID and client secret in the Key Vault.

Remember to replace placeholder values with your actual Azure AD application and Key Vault information.
