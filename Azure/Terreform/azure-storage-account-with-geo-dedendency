Below is an example Terraform script that creates an Azure Storage Account with geo-redundancy, generates a Shared Access Signature (SAS) token, outputs the values, and stores them in an Azure Key Vault named "pftckeyvault":

hcl
Copy code
provider "azurerm" {
  features = {}
}

resource "azurerm_resource_group" "storage_rg" {
  name     = "your-storage-resource-group"
  location = "your-location"
}

resource "azurerm_storage_account" "storage_account" {
  name                     = "yourstorageaccountname"
  resource_group_name      = azurerm_resource_group.storage_rg.name
  location                 = azurerm_resource_group.storage_rg.location
  account_tier             = "Standard"  # Standard or Premium
  account_replication_type = "GRS"       # GRS (geo-redundant storage) or LRS (locally redundant storage)

  tags = {
    environment = "production"
  }
}

resource "azurerm_storage_container" "example" {
  name                  = "yourcontainername"
  storage_account_name  = azurerm_storage_account.storage_account.name
  container_access_type = "private"
}

resource "azurerm_storage_account_sas" "example" {
  connection_string = azurerm_storage_account.storage_account.primary_connection_string
  https_only        = true

  resource_types {
    service   = true
    container = true
    object    = true
  }

  services {
    blob  = true
    queue = true
  }

  start  = "2024-01-01T00:00:00Z"
  expiry = "2025-01-01T00:00:00Z"
}

resource "azurerm_key_vault" "pftckeyvault" {
  name                = "pftckeyvault"
  resource_group_name = azurerm_resource_group.storage_rg.name
  location            = azurerm_resource_group.storage_rg.location
  enabled_for_disk_encryption = true
  enabled_for_deployment     = true
  enabled_for_template_deployment = true
}

resource "azurerm_key_vault_secret" "storage_account_key" {
  name         = "storage-account-key"
  key_vault_id = azurerm_key_vault.pftckeyvault.id
  value        = azurerm_storage_account.storage_account.primary_access_key
}

resource "azurerm_key_vault_secret" "sas_token" {
  name         = "sas-token"
  key_vault_id = azurerm_key_vault.pftckeyvault.id
  value        = azurerm_storage_account_sas.example.sas
}

output "storage_account_key" {
  value = azurerm_storage_account.storage_account.primary_access_key
}

output "sas_token" {
  value = azurerm_storage_account_sas.example.sas
}
Replace the placeholders (your-storage-resource-group, your-location, yourstorageaccountname, yourcontainername, etc.) with your actual values.

This script creates an Azure Storage Account, a storage container within the account, generates a Shared Access Signature (SAS) token, and then stores both the primary access key and SAS token in an Azure Key Vault named "pftckeyvault". The values are also outputted for reference.

Make sure to customize the script according to your specific requirements and configurations. After running the script, you can access the stored values in the Azure Key Vault.
