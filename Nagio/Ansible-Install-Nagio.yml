To install Nagios on a Red Hat Enterprise Linux 8 (RHEL 8) server using Ansible, you can create an Ansible playbook to automate the installation process. Here's a high-level guide on how to do it:

1. **Prerequisites**:

   - Ensure you have Ansible installed on your local machine.
   - Make sure your RHEL 8 server is properly configured and can access the internet for package downloads.

2. **Create an Ansible Playbook**:

   Create a YAML playbook (e.g., `install_nagios.yml`) and define the tasks to install Nagios. Here's an example playbook:

   ```yaml
   ---
   - name: Install Nagios on RHEL 8
     hosts: your_rhel_server
     become: yes  # To run tasks with sudo privileges

     tasks:
       - name: Install EPEL repository
         yum:
           name: epel-release
           state: present

       - name: Install required packages for Nagios
         yum:
           name: "{{ item }}"
           state: present
         loop:
           - nagios
           - nagios-plugins-all

       - name: Start and enable the Nagios service
         systemd:
           name: nagios
           state: started
           enabled: yes
   ```

   In this playbook:
   - Replace `your_rhel_server` with the hostname or IP address of your RHEL 8 server.
   - The `yum` module is used to install the EPEL repository and the required Nagios packages.
   - The `systemd` module is used to start and enable the Nagios service.

3. **Execute the Ansible Playbook**:

   Run the playbook using the `ansible-playbook` command:

   ```bash
   ansible-playbook install_nagios.yml
   ```

   Ansible will execute the tasks on the specified RHEL 8 server, installing Nagios and its dependencies.

4. **Post-Installation Configuration**:

   After Nagios is installed, you will need to configure it to monitor your specific services and hosts. This includes defining hosts, services, and configuring Nagios web access, which can be done using the Nagios configuration files located in `/etc/nagios/`. You may need to customize these configuration files based on your monitoring needs.

Remember to adapt the playbook and configurations to your specific environment and monitoring requirements. Additionally, consider securing Nagios and restricting access to its web interface as needed.